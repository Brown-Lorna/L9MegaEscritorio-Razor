@{
    var CustomerName = "";
    var DeskWidth = "";
    var DeskDepth = "";
    var NumDrawer = "";
    var DeskMaterial = "";
    var ShipDays = "";
    var OrderDate = "";
    var PriceQuote = 0;
    var Id = "";

    // These integers store the current prices for various desk options.
    int surfaceBaseArea = 1000;
    int SurfaceOveragePrice = 1;
    int pricePerDrawer = 50;
    int deskBasePrice = 200;

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            Id = Request.QueryString["ID"];
            var db = Database.Open("MegaEscritorioDeskOrders");
            var dbCommand = "SELECT * FROM DeskOrders WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, Id);

            if (row != null)
            {
                CustomerName = row.customerName;
                DeskWidth = row.deskWidth;
                DeskDepth = row.deskDepth;
            }
            else
            {
                Validation.AddFormError("No order was found for that ID.");
            }
        }
        else
        {
            Validation.AddFormError("No order was selected.");
        }
    }
    if (IsPost && !Request["buttonDelete"].IsEmpty())
    {
        // Validation
        Validation.RequireField("customerName", "You must enter a customer name.");
        Validation.RequireField("deskWidth", "You must enter a desk depth.");
        Validation.RequireField("deskDepth", "You must enter a desk depth.");
        Validation.RequireField("numDrawer", "You must select the number of drawers.");
        Validation.RequireField("deskMaterial", "You must select a material for the desk surface.");
        Validation.RequireField("shipDays", "You must select the number of days for shipping.");
        Validation.RequireField("priceQuote", "Total Price is required.");
        Validation.RequireField("shipDays", "No order ID was submitted.");
        Validation.Add("deskWidth", Validator.Integer("Width must be an integer."));
        Validation.Add("deskDepth", Validator.Integer("Depth must be an integer."));

        //   name = Request.Form["name"];
        // // length = Request.Form["length"].AsInt();
        //   width = Request.Form["width"].AsInt();
        //   drawers = Request.Form["drawers"].AsInt();
        //  material = Request.Form["material"];
        //   numDays = Request.Form["numDays"].AsInt();

        DeskWidth = Request.Form["deskWidth"];
        DeskDepth = Request.Form["deskDepth"];
        NumDrawer = Request.Form["numDrawer"];
        DeskMaterial = Request.Form["deskMaterial"];
        ShipDays = Request.Form["shipDays"];
        CustomerName = Request.Form["customerName"];


        int deskSurfaceArea = 0;
        int surfaceOverageInches = 0;
        // Calculate the surface area.
        deskSurfaceArea = Convert.ToInt32(DeskWidth) * Convert.ToInt32(DeskDepth);

        // Calculate the surface area overage, if any.
        if (deskSurfaceArea > 1000)
        {
            surfaceOverageInches = deskSurfaceArea - surfaceBaseArea;
        }
        else
        {
            surfaceOverageInches = 0;
        }

        int surfaceOverageCost = surfaceOverageInches * SurfaceOveragePrice;

        int drawerCost = Convert.ToInt32(NumDrawer) * pricePerDrawer;

        var materialCost = 0;

        switch (DeskMaterial)
        {
            case "oak":
                materialCost = 200;
                break;

            case "laminate":
                materialCost = 100;
                break;

            case "pine":
                materialCost = 50;
                break;

            case "cherry":
                materialCost = 225;
                break;

            case "walnut":
                materialCost = 250;
                break;

            case "maple":
                materialCost = 275;
                break;
        }

        int shipCharge = 0;

        switch (ShipDays)
        {
            case "3":
                {
                    if (deskSurfaceArea < 1000)
                    {
                        shipCharge = 60;
                    }
                    else if ((deskSurfaceArea >= 1001) && (deskSurfaceArea <= 1999))
                    {
                        shipCharge = 70;
                    }
                    else
                    {
                        shipCharge = 80;
                    }
                }
                break;

            case "5":
                {
                    if (deskSurfaceArea < 1000)
                    {
                        shipCharge = 40;
                    }
                    else if ((deskSurfaceArea >= 1000) && (deskSurfaceArea <= 1999))
                    {
                        shipCharge = 50;
                    }
                    else
                    {
                        shipCharge = 60;
                    }
                }
                break;

            case "7":
                {
                    if (deskSurfaceArea < 1000)
                    {
                        shipCharge = 30;
                    }
                    else if ((deskSurfaceArea >= 1001) && (deskSurfaceArea <= 1999))
                    {
                        shipCharge = 30;
                    }
                    else
                    {
                        shipCharge = 40;
                    }
                }
                break;

            case "14":
                {
                    shipCharge = 0;
                }
                break;
        }

        PriceQuote = (deskBasePrice + surfaceOverageCost + drawerCost + materialCost + shipCharge);

        Id = Request.Form["Id"];
        var db = Database.Open("MegaEscritorioDeskOrders");
        var insertCommand = "UPDATE DeskOrders SET deskwidth=@0, deskDepth=@1, numDrawer=@2, deskMaterial=@3, shipDays=@4, customerName=@5, priceQuote=@6 WHERE ID=@7)";
        db.Execute(insertCommand, DeskWidth, DeskDepth, NumDrawer, DeskMaterial, ShipDays, CustomerName, OrderDate, PriceQuote);
        Response.Redirect("~/MegaEscritorio");
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>Eit Desk Order</title>
    <link rel="stylesheet" type="text/css" href="~/Styles/Main.css" />
</head>
<body>
    @RenderPage("~/_Nav.cshtml")
    <h1>Edit the Desk Order</h1>
</body>
</html>